% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wavelets.R
\name{compute_mu_from_beta}
\alias{compute_mu_from_beta}
\title{Compute Mean Functions from Wavelet Coefficients}
\usage{
compute_mu_from_beta(beta_ch, wf, J, boundary, P)
}
\arguments{
\item{beta_ch}{List of length M containing wavelet coefficients for each channel}

\item{wf}{Character string specifying the wavelet filter}

\item{J}{Integer specifying the number of decomposition levels}

\item{boundary}{Character string specifying boundary condition}

\item{P}{Integer specifying the number of time points in the original signal}
}
\value{
Matrix of size P x M containing the reconstructed mean functions for each channel
}
\description{
Reconstructs mean functions from wavelet coefficients using inverse transform.
This function converts wavelet-domain parameters back to the time domain for visualization
and interpretation.
}
\details{
This function is used to reconstruct mean functions from wavelet coefficients
stored during MCMC sampling. It creates a template using a zero matrix to ensure
proper wavelet structure, then applies the inverse transform to each channel's coefficients.
}
\examples{
# Assuming beta_ch contains wavelet coefficients for 2 channels
mu <- compute_mu_from_beta(beta_ch, wf = "la8", J = 4, boundary = "periodic", P = 64)
dim(mu)  # Should be (64, 2)
}
